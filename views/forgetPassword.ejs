<!DOCTYPE html>
<html lang="en">
  <head>
    <title>Forgot Password - Decor And More</title>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css"
      rel="stylesheet">
    <link href="/css/darkMode.css" rel="stylesheet">
    <link
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css"
      rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Belleza&display=swap"
      rel="stylesheet">
    <style>
      body {
          min-height: 100vh;
          display: flex;
          align-items: center;
          justify-content: center;
          padding: 0;
          margin: 0;
          font-family: sans-serif;
          transition: all 0.3s ease;
      }

      /* Light mode styles */
      body:not(.dark-mode) {
          background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
          color: #333;
      }

      body:not(.dark-mode) .card {
          background: #fff;
          color: #333;
          box-shadow: 0 10px 35px rgba(0,0,0,0.1);
      }

      body:not(.dark-mode) .card-header {
          background-color: #f8f9fa;
          color: #333;
          border-bottom: 1px solid #dee2e6;
      }

      body:not(.dark-mode) .forgot-icon {
          color: #ffd700;
      }

      body:not(.dark-mode) .card-body h4 {
          color: #333;
      }

      body:not(.dark-mode) .form-control {
          border: 1px solid #ced4da;
          background: #fff;
          color: #333;
      }

      body:not(.dark-mode) .form-control:focus {
          box-shadow: 0 0 0 0.2rem rgba(255, 215, 0, 0.25);
          border-color: #ffd700;
      }

      body:not(.dark-mode) .btn-primary {
          background: #ffd700;
          color: #333;
      }

      body:not(.dark-mode) a.text-decoration-none {
          color: #ffd700;
      }

      /* Dark mode styles */
      body.dark-mode {
          background: linear-gradient(135deg, #232526 0%, #414345 100%);
          color: #e0e0e0;
      }

      body.dark-mode .card {
          border: none;
          border-radius: 22px;
          box-shadow: 0 10px 35px rgba(0,0,0,0.18);
          overflow: hidden;
          background: #18191a;
          color: #ffd700;
      }

      body.dark-mode .card-header {
          background-color: #343a40;
          color: #ffd700;
          border-bottom: 1px solid #ffd700;
      }

      body.dark-mode .forgot-icon {
          color: #ffd700;
      }

      body.dark-mode .card-body h4 {
          color: #ffd700;
      }

      body.dark-mode .card-body p.text-muted {
          color: #adb5bd !important;
      }

      body.dark-mode .form-control {
          border: 1px solid #495057;
          background: #2c2f33;
          color: #e0e0e0;
      }

      body.dark-mode .form-control::placeholder {
          color: #6c757d;
      }

      body.dark-mode .form-control:focus {
          box-shadow: 0 0 0 0.2rem rgba(255, 215, 0, 0.25);
          border-color: #ffd700;
          background: #2c2f33;
      }

      body.dark-mode .btn-primary {
          background: #ffd700;
          color: #18191a;
      }

      body.dark-mode .btn-primary:hover {
          background: #e6c300;
      }

      body.dark-mode a.text-decoration-none {
          color: #ffd700;
      }

      /* Common styles */
      .card {
          max-width: 380px;
          width: 90%;
          margin: 20px;
          border-radius: 22px;
          overflow: hidden;
      }

      .card-header {
          text-align: center;
          padding: 20px 15px;
      }

      .card-header h3 {
          margin: 0;
          font-weight: 600;
          font-size: 1.8rem;
          font-family: 'Belleza', sans-serif;
      }

      .forgot-icon {
          font-size: 3rem;
          margin-bottom: 15px;
      }

      .card-body h4 {
          font-weight: 700;
          font-size: 1.3rem;
          font-family: 'Belleza', sans-serif;
      }

      .form-control {
          border-radius: 10px;
          padding: 12px;
      }

      .btn-primary {
          border: none;
          padding: 12px 0;
          border-radius: 30px;
          font-weight: bold;
          letter-spacing: 1px;
          font-size: 1.1rem;
          transition: all 0.2s;
      }

      .btn-primary:hover {
          transform: translateY(-2px);
      }

      #message {
          min-height: 24px;
          font-size: 0.95rem;
          text-align: center;
          padding: 10px;
          border-radius: 8px;
          margin-bottom: 15px;
          transition: all 0.3s ease;
          font-weight: 500;
      }

      .success-message {
          background-color: rgba(40, 167, 69, 0.1);
          color: #28a745;
          border: 1px solid rgba(40, 167, 69, 0.2);
      }

      body.dark-mode .success-message {
          background-color: rgba(40, 167, 69, 0.15);
          color: #5cff8a;
          border: 1px solid rgba(40, 167, 69, 0.3);
      }

      .error-message {
          background-color: rgba(220, 53, 69, 0.1);
          color: #dc3545;
          border: 1px solid rgba(220, 53, 69, 0.2);
      }

      body.dark-mode .error-message {
          background-color: rgba(220, 53, 69, 0.15);
          color: #ff5c6a;
          border: 1px solid rgba(220, 53, 69, 0.3);
      }

      a.text-decoration-none {
          font-weight: 500;
      }

      a.text-decoration-none:hover {
          text-decoration: underline;
      }

      /* Dark mode toggle button */
      button.dark-mode {
          position: fixed;
          top: 20px;
          right: 20px;
          background: transparent;
          border: none;
          cursor: pointer;
          width: 40px;
          height: 40px;
          display: flex;
          align-items: center;
          justify-content: center;
          border-radius: 50%;
          transition: all 0.3s ease;
          padding: 0;
          z-index: 1000;
      }

      button.dark-mode:hover {
          transform: scale(1.1);
          background-color: rgba(0, 0, 0, 0.05);
      }

      body.dark-mode button.dark-mode:hover {
          background-color: rgba(255, 255, 255, 0.1);
      }

      button.dark-mode i {
          font-size: 1.2rem;
          color: #6c757d;
          transition: all 0.3s ease;
      }

      body.dark-mode button.dark-mode i {
          color: #ffd700;
      }
  </style>
  </head>
  <body>
    <!-- Dark mode toggle button -->
    <button onclick="toggleDarkMode()" class="dark-mode"
      aria-label="Toggle dark mode">
      <i class="fa-solid fa-moon" aria-hidden="true"
        title="Toggle to dark mode"></i>
    </button>

    <div class="card">
      <div class="card-header">
        <h3>Forgot Password</h3>
      </div>
      <div class="card-body p-4">
        <div class="text-center mb-4">
          <i class="fas fa-lock forgot-icon"></i>
          <h4 class="mb-3">Reset Your Password</h4>
          <p class="text-muted">Enter your email to receive a reset code</p>
        </div>
        <form id="forgotForm">
          <div class="mb-4">
            <input type="email" id="email" class="form-control"
              placeholder="name@example.com" required autocomplete="email">
          </div>
          <!-- Message div for feedback -->
          <div id="message" class="mb-3"></div>
          <div class="text-center mb-3"> <!-- Added margin-bottom -->
            <button type="submit" class="btn btn-primary btn-lg w-100">
              <span class="spinner-border spinner-border-sm d-none me-2"
                role="status" aria-hidden="true"></span>
              Send Code
              <i class="fas fa-paper-plane ms-2"></i>
            </button>
          </div>
          <div class="text-center mt-3">
            <a href="/login" class="text-decoration-none">Back to Login</a>
          </div>
        </form>
      </div>
    </div>

    <!-- Scripts should be placed at the end of body -->
    <!-- Assuming js/darkMode.js exists relative to this HTML file -->
    <script src="js/darkMode.js"></script>
    <script>
    document.getElementById("forgotForm").addEventListener("submit", async function (event) {
      event.preventDefault();
      const emailInput = document.getElementById("email");
      const email = emailInput.value;
      const messageDiv = document.getElementById("message");
      const submitButton = this.querySelector('button[type="submit"]');
      const spinner = submitButton.querySelector('.spinner-border');

      // Clear previous messages
      messageDiv.innerHTML = "";
      messageDiv.className = "mb-3"; // Reset class

      // Basic email validation (optional, but good practice)
      if (!email || !/^[^"]+@[^"]+\.[a-zA-Z]{2,}$/.test(email)) {
          messageDiv.innerHTML = '<i class="fas fa-exclamation-circle me-2"></i>Please enter a valid email address.';
          messageDiv.classList.add("error-message");
          emailInput.focus();
          return;
      }

      submitButton.disabled = true;
      spinner.classList.remove('d-none');

      try {
        // Replace "/forgetPassword" with your actual API endpoint
        const response = await fetch("/forgetPassword", {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          body: JSON.stringify({ email }),
        });

        const data = await response.text(); // Use text() first to handle potential non-JSON errors

        if (response.ok) {
          messageDiv.innerHTML = '<i class="fas fa-check-circle me-2"></i>Code sent successfully. Redirecting...';
          messageDiv.classList.add("success-message");
          // Redirect to verification page after a delay
          // Replace "/verifyCode" with your actual verification page URL
          setTimeout(() => window.location.href = `/verifyCode?email=${encodeURIComponent(email)}`, 2000);
        } else {
          // Try to parse error message if JSON, otherwise use the text
          let errorMessage = data;
          try {
              const errorJson = JSON.parse(data);
              errorMessage = errorJson.message || data;
          } catch (e) { /* Ignore parsing error, use raw text */ }
          messageDiv.innerHTML = `<i class="fas fa-exclamation-circle me-2"></i>Error: ${errorMessage}`;
          messageDiv.classList.add("error-message");
        }
      } catch (error) {
        console.error("Forgot Password Error:", error);
        messageDiv.innerHTML = '<i class="fas fa-exclamation-triangle me-2"></i>An unexpected error occurred. Please try again later.';
        messageDiv.classList.add("error-message");
      } finally {
        // Re-enable button and hide spinner after fetch completes
        submitButton.disabled = false;
        spinner.classList.add('d-none');
      }
    });
  </script>
  </body>
</html>

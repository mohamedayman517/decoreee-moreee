<!DOCTYPE html>
<html lang="en">
  <head>
    <title>Reset Password</title>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css"
      rel="stylesheet">
    <link rel="stylesheet" href="/css/darkMode.css">
    <link
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.7.2/css/all.min.css"
      rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Belleza&display=swap"
      rel="stylesheet">
    <style>
    body {
      min-height: 100vh;
      display: flex;
      align-items: center;
      justify-content: center;
      margin: 0;
      font-family: sans-serif;
      transition: all 0.3s ease;
    }

    /* Light mode styles */
    body:not(.dark-mode) {
      background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
      color: #333;
    }

    body:not(.dark-mode) .card {
      background: #fff;
      color: #333;
      box-shadow: 0 10px 35px rgba(0,0,0,0.1);
    }

    body:not(.dark-mode) .card-header {
      background-color: #f8f9fa;
      color: #333;
      border-bottom: 1px solid #dee2e6;
    }

    body:not(.dark-mode) .form-control {
      border: 1px solid #ced4da;
      background: #fff;
      color: #333;
    }

    body:not(.dark-mode) .form-control:focus {
      box-shadow: 0 0 0 0.2rem rgba(255, 215, 0, 0.25);
      border-color: #ffd700;
    }

    body:not(.dark-mode) .btn-primary {
      background: #ffd700;
      color: #333;
    }

    body:not(.dark-mode) a.text-decoration-none {
      color: #ffd700;
    }

    /* Dark mode styles */
    body.dark-mode {
      background: linear-gradient(135deg, #232526 0%, #414345 100%);
      color: #e0e0e0;
    }

    body.dark-mode .card {
      background: #18191a;
      color: #ffd700;
    }

    body.dark-mode .card-header {
      background-color: #343a40;
      color: #ffd700;
      border-bottom: 1px solid #ffd700;
    }

    body.dark-mode .form-control {
      border: 1px solid #495057;
      background: #2c2f33;
      color: #e0e0e0;
    }

    body.dark-mode .form-control::placeholder {
      color: #6c757d;
    }

    body.dark-mode .form-control:focus {
      box-shadow: 0 0 0 0.2rem rgba(255, 215, 0, 0.25);
      border-color: #ffd700;
      background: #2c2f33;
    }

    body.dark-mode .btn-primary {
      background: #ffd700;
      color: #18191a;
    }

    body.dark-mode .btn-primary:hover {
      background: #e6c300;
    }

    body.dark-mode a.text-decoration-none {
      color: #ffd700;
    }

    /* Common styles */
    .card {
      border: none;
      border-radius: 22px;
      max-width: 400px;
      width: 90%;
      margin: 20px;
      box-shadow: 0 10px 35px rgba(0,0,0,0.18);
    }

    .card-header {
      text-align: center;
      padding: 20px 15px;
    }

    .card-header h3 {
      margin: 0;
      font-weight: 600;
      font-size: 1.8rem;
      font-family: 'Belleza', sans-serif;
    }

    .form-control {
      border-radius: 10px;
      padding: 12px;
      font-size: 1.1rem;
    }

    .btn-primary, .btn-primary:focus {
      border: none;
      padding: 12px 0;
      border-radius: 30px;
      font-weight: bold;
      letter-spacing: 1px;
      font-size: 1.1rem;
      transition: all 0.2s;
    }

    .btn-primary:hover {
      transform: translateY(-2px);
    }

    #message {
      min-height: 24px;
      font-size: 0.95rem;
      text-align: center;
      padding: 10px;
      border-radius: 8px;
      margin-bottom: 15px;
      transition: all 0.3s ease;
      font-weight: 500;
    }

    .success-message {
      background-color: rgba(40, 167, 69, 0.1);
      color: #28a745;
      border: 1px solid rgba(40, 167, 69, 0.2);
    }

    body.dark-mode .success-message {
      background-color: rgba(40, 167, 69, 0.15);
      color: #5cff8a;
      border: 1px solid rgba(40, 167, 69, 0.3);
    }

    .error-message {
      background-color: rgba(220, 53, 69, 0.1);
      color: #dc3545;
      border: 1px solid rgba(220, 53, 69, 0.2);
    }

    body.dark-mode .error-message {
      background-color: rgba(220, 53, 69, 0.15);
      color: #ff5c6a;
      border: 1px solid rgba(220, 53, 69, 0.3);
    }

    a.text-decoration-none {
      font-weight: 500;
    }

    a.text-decoration-none:hover {
      text-decoration: underline;
    }

    /* Dark mode toggle button */
    button.dark-mode {
      position: fixed;
      top: 20px;
      right: 20px;
      background: transparent;
      border: none;
      cursor: pointer;
      width: 40px;
      height: 40px;
      display: flex;
      align-items: center;
      justify-content: center;
      border-radius: 50%;
      transition: all 0.3s ease;
      padding: 0;
      z-index: 1000;
    }

    button.dark-mode:hover {
      transform: scale(1.1);
      background-color: rgba(0, 0, 0, 0.05);
    }

    body.dark-mode button.dark-mode:hover {
      background-color: rgba(255, 255, 255, 0.1);
    }

    button.dark-mode i {
      font-size: 1.2rem;
      color: #6c757d;
      transition: all 0.3s ease;
    }

    body.dark-mode button.dark-mode i {
      color: #ffd700;
    }
  </style>
  </head>
  <body>
    <!-- Dark mode toggle button -->
    <button onclick="toggleDarkMode()" class="dark-mode"
      aria-label="Toggle dark mode">
      <i class="fa-solid fa-moon" aria-hidden="true"
        title="Toggle to dark mode"></i>
    </button>

    <div class="card">
      <div class="card-header">
        <h3>Reset Password</h3>
      </div>
      <div class="card-body p-4">
        <form id="resetForm">
          <input type="hidden" id="email" value="<%= email %>">
          <div class="mb-4 position-relative">
            <input type="password" id="newPassword" class="form-control pe-5"
              placeholder="New Password" required minlength="6">
            <i
              class="fa fa-eye toggle-password position-absolute top-50 end-0 translate-middle-y me-3"
              data-target="newPassword" style="cursor: pointer;"></i>
          </div>
          <div class="mb-4 position-relative">
            <input type="password" id="confirmPassword"
              class="form-control pe-5"
              placeholder="Confirm Password" required minlength="6">
            <i
              class="fa fa-eye toggle-password position-absolute top-50 end-0 translate-middle-y me-3"
              data-target="confirmPassword" style="cursor: pointer;"></i>
          </div>

          <div id="message" class="mb-3"></div>
          <div class="text-center mb-3">
            <button type="submit" class="btn btn-primary btn-lg w-100">
              <span class="spinner-border spinner-border-sm d-none me-2"
                role="status" aria-hidden="true"></span>
              Reset Password
              <i class="fas fa-sync-alt ms-2"></i>
            </button>
          </div>
          <div class="text-center mt-3">
            <a href="/login" class="text-decoration-none">Back to Login</a>
          </div>
        </form>
      </div>
    </div>

    <script>
  document.getElementById("resetForm").addEventListener("submit", async function (event) {
  event.preventDefault();
  const email = document.getElementById("email").value;
  const newPassword = document.getElementById("newPassword").value;
  const confirmPassword = document.getElementById("confirmPassword").value;
  const message = document.getElementById("message");
  const submitButton = this.querySelector('button[type="submit"]');
  const spinner = submitButton.querySelector('.spinner-border');

  message.innerHTML = "";
  message.className = "mb-3";

  // تحقق regex
  const passwordRegex = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[!@#$%^&*()_\-+=\[\]{};':"\\|,.<>\/?]).{6,}$/;
   if (!passwordRegex.test(newPassword)) {
    message.innerHTML = '<i class="fas fa-exclamation-circle me-2"></i>Password must be at least 6 characters and contain uppercase, lowercase, digit, and special character.';
    message.classList.add("error-message");
    return;
  }
  if (newPassword !== confirmPassword) {
    message.innerHTML = '<i class="fas fa-exclamation-circle me-2"></i>Passwords do not match.';
    message.classList.add("error-message");
    return;
  }

  submitButton.disabled = true;
  spinner.classList.remove("d-none");

  try {
    const response = await fetch("/resetPassword", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ email, password: newPassword }) // هنا اسم الحقل الصحيح
    });
    const data = await response.text();

    if (response.ok) {
      message.innerHTML = '<i class="fas fa-check-circle me-2"></i>Password reset successfully. Redirecting...';
      message.classList.add("success-message");
      setTimeout(() => window.location.href = "/login", 2000);
    } else {
      message.innerHTML = `<i class="fas fa-exclamation-circle me-2"></i>Error: ${data}`;
      message.classList.add("error-message");
    }
  } catch (error) {
    message.innerHTML = '<i class="fas fa-exclamation-triangle me-2"></i>An unexpected error occurred.';
    message.classList.add("error-message");
  } finally {
    submitButton.disabled = false;
    spinner.classList.add("d-none");
  }
});
  </script>
    <script src="/js/darkMode.js"></script>

    <script>
  // Toggle password visibility
  document.querySelectorAll('.toggle-password').forEach(icon => {
    icon.addEventListener('click', () => {
      const targetId = icon.getAttribute('data-target');
      const input = document.getElementById(targetId);
      if (input.type === "password") {
        input.type = "text";
        icon.classList.remove('fa-eye');
        icon.classList.add('fa-eye-slash');
      } else {
        input.type = "password";
        icon.classList.remove('fa-eye-slash');
        icon.classList.add('fa-eye');
      }
    });
  });


    </script>
  </body>
</html>
